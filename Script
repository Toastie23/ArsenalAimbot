local player = game.Players.LocalPlayer
local team = player.Team
local camera = game.Workspace.CurrentCamera
local mouse = player:GetMouse()
local isRightClicking = false
local lineThickness = 0.1  -- Thickness of the line
local players = game.Players:GetPlayers()

-- Function to create a line from one position to another
local function createLine(fromPosition, toPosition)
    local line = Instance.new("Part")
    line.Anchored = true
    line.CanCollide = false
    line.BrickColor = BrickColor.new("Bright red")
    line.Material = Enum.Material.SmoothPlastic

    local distance = (fromPosition - toPosition).magnitude
    line.Size = Vector3.new(lineThickness, lineThickness, distance)
    
    line.CFrame = CFrame.new(fromPosition, toPosition) * CFrame.new(0, 0, -distance / 2)
    line.Parent = workspace
    
    -- Automatically clean up after 10 seconds
    game:GetService("Debris"):AddItem(line, 10)
end

-- Function to update lines
local function updateLines()
    -- Clear existing lines
    for _, obj in pairs(workspace:GetChildren()) do
        if obj:IsA("Part") and obj.BrickColor == BrickColor.new("Bright red") then
            obj:Destroy()
        end
    end

    -- Get player's position for feet
    local character = player.Character
    if not character then return end

    local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
    if not humanoidRootPart then return end

    local fromPosition = humanoidRootPart.Position - Vector3.new(0, 2, 0)  -- Position slightly below the feet

    -- Iterate through all players
    for _, otherPlayer in pairs(players) do
        if otherPlayer ~= player and otherPlayer.Team ~= team then
            local otherCharacter = otherPlayer.Character
            if otherCharacter then
                local otherHead = otherCharacter:FindFirstChild("Head")
                if otherHead then
                    createLine(fromPosition, otherHead.Position)
                end
            end
        end
    end
end

-- Function to instantly move the camera to the target position
local function moveCameraToTarget(targetPosition)
    camera.CFrame = CFrame.new(camera.CFrame.Position, targetPosition) * CFrame.new(0, 0, -10)  -- Adjust distance as needed
end

-- Function to find the player closest to the mouse pointer
local function getTargetPlayer()
    local closestPlayer = nil
    local shortestDistance = math.huge

    local mousePosition = mouse.Hit.p
    for _, otherPlayer in pairs(players) do
        if otherPlayer ~= player and otherPlayer.Team ~= team then
            local otherCharacter = otherPlayer.Character
            if otherCharacter then
                local otherHead = otherCharacter:FindFirstChild("Head")
                if otherHead then
                    local screenPosition, onScreen = camera:WorldToScreenPoint(otherHead.Position)
                    if onScreen then
                        local distance = (mousePosition - otherHead.Position).magnitude
                        if distance < shortestDistance then
                            closestPlayer = otherPlayer
                            shortestDistance = distance
                        end
                    end
                end
            end
        end
    end

    return closestPlayer
end

-- Function to fire a bullet
local function fireBullet()
    local rayOrigin = camera.CFrame.Position
    local rayDirection = (mouse.Hit.p - rayOrigin).unit * 1000  -- Adjust range as needed

    -- Create a ray
    local ray = Ray.new(rayOrigin, rayDirection)
    local hitPart, hitPosition = workspace:FindPartOnRay(ray, player.Character, false, true)

    if hitPart then
        -- Check if the hit object is a player
        local hitCharacter = hitPart.Parent
        local hitPlayer = game.Players:GetPlayerFromCharacter(hitCharacter)

        if hitPlayer then
            print("Hit player: " .. hitPlayer.Name)
            -- You can add code here to deal damage to the hitPlayer
        end
    end
end

-- Update camera and lines based on mouse input
local function updateCameraAndLines()
    while true do
        if isRightClicking then
            local targetPlayer = getTargetPlayer()
            if targetPlayer then
                local head = targetPlayer.Character:FindFirstChild("Head")
                if head then
                    moveCameraToTarget(head.Position)
                end
            end
        end
        updateLines()
        wait(0.1)  -- Small wait to reduce performance impact
    end
end

-- Detect right-click input to start shooting
mouse.Button1Down:Connect(function()
    if not shooting then
        shooting = true
        fireBullet()
        shooting = false
    end
end)

-- Detect right-click input to control camera
mouse.Button2Down:Connect(function()
    isRightClicking = true
end)

mouse.Button2Up:Connect(function()
    isRightClicking = false
end)

-- Detect new players joining
game.Players.PlayerAdded:Connect(function(newPlayer)
    table.insert(players, newPlayer)
end)

-- Detect players leaving
game.Players.PlayerRemoving:Connect(function(leavingPlayer)
    for i, p in ipairs(players) do
        if p == leavingPlayer then
            table.remove(players, i)
            break
        end
    end
end)

-- Start the camera and lines update loop
updateCameraAndLines()
